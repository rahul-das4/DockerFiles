USERNAME=jenkins
HOME=/opt/jenkins_home
#VOL=jenkins_home
IMAGE=myimagejs:final
CONT=mycontjs
REF_LOC=/usr/share/jenkins/ref

mkdir $HOME
chown 1000:1000 $HOME
cp casc.yaml $HOME
#####################################
# Define no of executors in Jenkins master machine
#####################################

cat <<EOF >executors.groovy
import jenkins.model.*
Jenkins.instance.setNumExecutors(4)
EOF

#####################################
# creates DockerFile
#####################################

cat <<EOF >Dockerfile
FROM jenkins/jenkins:lts-jdk11
MAINTAINER Rahul Das
ENV JENKINS_SLAVE_AGENT_PORT=49100
ENV JAVA_OPTS -Djenkins.install.runSetupWizard=false
ENV CASC_JENKINS_CONFIG /var/jenkins_home/init.groovy.d/casc.yaml
ENV HOME /var/jenkins_home

COPY --chown=$USERNAME:$USERNAME plugins.txt $REF_LOC
RUN xargs /usr/local/bin/install-plugins.sh < $REF_LOC/plugins.txt

COPY --chown=$USERNAME:$USERNAME executors.groovy  $REF_LOC/init.groovy.d/executors.groovy
#RUN mkdir $REF_LOC/ssl
#COPY --chown=$USERNAME:$USERNAME rahul.pfx $REF_LOC/ssl
#COPY --chown=$USERNAME:$USERNAME casc.yaml /var/jenkins_home/casc.yaml
ADD casc.yaml /usr/share/jenkins/ref/init.groovy.d/casc.yaml
#ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8081 --httpsKeyStore=$REF_LOC/ssl/rahul.pfx --httpsKeyStorePassword=Edison123
EXPOSE 8080
VOLUME $HOME
EOF

docker build --no-cache -t $IMAGE .
docker run -d --name $CONT -p 5000:8080 --env JENKINS_ADMIN_ID=admin --env JENKINS_ADMIN_PASSWORD=admin -v $HOME:/var/jenkins_home $IMAGE

#### Use this if you wish to run Manually #####
#docker run -d --name mycontjs -p 5000:8080 --env JENKINS_ADMIN_ID=admin --env JENKINS_ADMIN_PASSWORD=admin -v $HOME:/var/jenkins_home myimagejs:casc

### Run without bind or volume mount
#docker run -d --name mycontjs -p 5000:8080 --env JENKINS_ADMIN_ID=admin --env JENKINS_ADMIN_PASSWORD=admin myimagejs:<tag> D=admin myimagejs:<tag>

